// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: grpc_manager.proto

package manager

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	From    string            `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Token   string            `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Payload map[string]string `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Request) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Request) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Request) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

type PeerRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId       string `protobuf:"bytes,1,opt,name=peerId,proto3" json:"peerId,omitempty"`
	PeerKey      string `protobuf:"bytes,2,opt,name=peerKey,proto3" json:"peerKey,omitempty"`
	PeerUsername string `protobuf:"bytes,3,opt,name=peerUsername,proto3" json:"peerUsername,omitempty"`
}

func (x *PeerRegisterRequest) Reset() {
	*x = PeerRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerRegisterRequest) ProtoMessage() {}

func (x *PeerRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerRegisterRequest.ProtoReflect.Descriptor instead.
func (*PeerRegisterRequest) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{1}
}

func (x *PeerRegisterRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *PeerRegisterRequest) GetPeerKey() string {
	if x != nil {
		return x.PeerKey
	}
	return ""
}

func (x *PeerRegisterRequest) GetPeerUsername() string {
	if x != nil {
		return x.PeerUsername
	}
	return ""
}

type PeerRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Log     string `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *PeerRegisterResponse) Reset() {
	*x = PeerRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerRegisterResponse) ProtoMessage() {}

func (x *PeerRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerRegisterResponse.ProtoReflect.Descriptor instead.
func (*PeerRegisterResponse) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{2}
}

func (x *PeerRegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PeerRegisterResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type PeerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number    int32             `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	LastIndex int32             `protobuf:"varint,2,opt,name=lastIndex,proto3" json:"lastIndex,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Filters   map[string]string `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Token     string            `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PeerListRequest) Reset() {
	*x = PeerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerListRequest) ProtoMessage() {}

func (x *PeerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerListRequest.ProtoReflect.Descriptor instead.
func (*PeerListRequest) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{3}
}

func (x *PeerListRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PeerListRequest) GetLastIndex() int32 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

func (x *PeerListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PeerListRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *PeerListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SquadConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Password    string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	AuthType    string `protobuf:"bytes,4,opt,name=authType,proto3" json:"authType,omitempty"`
	NetworkType string `protobuf:"bytes,5,opt,name=networkType,proto3" json:"networkType,omitempty"`
	Token       string `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SquadConnectRequest) Reset() {
	*x = SquadConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadConnectRequest) ProtoMessage() {}

func (x *SquadConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadConnectRequest.ProtoReflect.Descriptor instead.
func (*SquadConnectRequest) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{4}
}

func (x *SquadConnectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SquadConnectRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SquadConnectRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SquadConnectRequest) GetAuthType() string {
	if x != nil {
		return x.AuthType
	}
	return ""
}

func (x *SquadConnectRequest) GetNetworkType() string {
	if x != nil {
		return x.NetworkType
	}
	return ""
}

func (x *SquadConnectRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ProtoSquad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Members           []string `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	SquadType         string   `protobuf:"bytes,4,opt,name=squadType,proto3" json:"squadType,omitempty"`
	Owner             string   `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Host              string   `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	AuthType          string   `protobuf:"bytes,7,opt,name=authType,proto3" json:"authType,omitempty"`
	Status            bool     `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	AuthorizedMembers []string `protobuf:"bytes,9,rep,name=authorizedMembers,proto3" json:"authorizedMembers,omitempty"`
}

func (x *ProtoSquad) Reset() {
	*x = ProtoSquad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSquad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSquad) ProtoMessage() {}

func (x *ProtoSquad) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSquad.ProtoReflect.Descriptor instead.
func (*ProtoSquad) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoSquad) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtoSquad) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProtoSquad) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ProtoSquad) GetSquadType() string {
	if x != nil {
		return x.SquadType
	}
	return ""
}

func (x *ProtoSquad) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ProtoSquad) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProtoSquad) GetAuthType() string {
	if x != nil {
		return x.AuthType
	}
	return ""
}

func (x *ProtoSquad) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ProtoSquad) GetAuthorizedMembers() []string {
	if x != nil {
		return x.AuthorizedMembers
	}
	return nil
}

type SquadCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SquadType string `protobuf:"bytes,3,opt,name=squadType,proto3" json:"squadType,omitempty"`
	Password  string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Token     string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SquadCreateRequest) Reset() {
	*x = SquadCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadCreateRequest) ProtoMessage() {}

func (x *SquadCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadCreateRequest.ProtoReflect.Descriptor instead.
func (*SquadCreateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{6}
}

func (x *SquadCreateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SquadCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SquadCreateRequest) GetSquadType() string {
	if x != nil {
		return x.SquadType
	}
	return ""
}

func (x *SquadCreateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SquadCreateRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SquadListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number           int32             `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	LastIndex        int32             `protobuf:"varint,2,opt,name=lastIndex,proto3" json:"lastIndex,omitempty"`
	Name             string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Filters          map[string]string `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SquadType        string            `protobuf:"bytes,5,opt,name=squadType,proto3" json:"squadType,omitempty"`
	SquadNetworkType string            `protobuf:"bytes,6,opt,name=squadNetworkType,proto3" json:"squadNetworkType,omitempty"`
	Token            string            `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SquadListRequest) Reset() {
	*x = SquadListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadListRequest) ProtoMessage() {}

func (x *SquadListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadListRequest.ProtoReflect.Descriptor instead.
func (*SquadListRequest) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{7}
}

func (x *SquadListRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *SquadListRequest) GetLastIndex() int32 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

func (x *SquadListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SquadListRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SquadListRequest) GetSquadType() string {
	if x != nil {
		return x.SquadType
	}
	return ""
}

func (x *SquadListRequest) GetSquadNetworkType() string {
	if x != nil {
		return x.SquadNetworkType
	}
	return ""
}

func (x *SquadListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SquadUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SquadType string `protobuf:"bytes,3,opt,name=squadType,proto3" json:"squadType,omitempty"`
	Password  string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Id        string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Token     string `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SquadUpdateRequest) Reset() {
	*x = SquadUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadUpdateRequest) ProtoMessage() {}

func (x *SquadUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadUpdateRequest.ProtoReflect.Descriptor instead.
func (*SquadUpdateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{8}
}

func (x *SquadUpdateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SquadUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SquadUpdateRequest) GetSquadType() string {
	if x != nil {
		return x.SquadType
	}
	return ""
}

func (x *SquadUpdateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SquadUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SquadUpdateRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SquadDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	SquadId string `protobuf:"bytes,2,opt,name=squadId,proto3" json:"squadId,omitempty"`
	Token   string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SquadDeleteRequest) Reset() {
	*x = SquadDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadDeleteRequest) ProtoMessage() {}

func (x *SquadDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadDeleteRequest.ProtoReflect.Descriptor instead.
func (*SquadDeleteRequest) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{9}
}

func (x *SquadDeleteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SquadDeleteRequest) GetSquadId() string {
	if x != nil {
		return x.SquadId
	}
	return ""
}

func (x *SquadDeleteRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PubKey        string   `protobuf:"bytes,3,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Active        bool     `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	KnownSquadsId []string `protobuf:"bytes,5,rep,name=knownSquadsId,proto3" json:"knownSquadsId,omitempty"`
	Friends       []string `protobuf:"bytes,6,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{10}
}

func (x *Peer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Peer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Peer) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *Peer) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Peer) GetKnownSquadsId() []string {
	if x != nil {
		return x.KnownSquadsId
	}
	return nil
}

func (x *Peer) GetFriends() []string {
	if x != nil {
		return x.Friends
	}
	return nil
}

type PeerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	LastIndex int32   `protobuf:"varint,2,opt,name=lastIndex,proto3" json:"lastIndex,omitempty"`
	Peers     []*Peer `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *PeerListResponse) Reset() {
	*x = PeerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerListResponse) ProtoMessage() {}

func (x *PeerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerListResponse.ProtoReflect.Descriptor instead.
func (*PeerListResponse) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{11}
}

func (x *PeerListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PeerListResponse) GetLastIndex() int32 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

func (x *PeerListResponse) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type SquadConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Id      string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Members []string `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *SquadConnectResponse) Reset() {
	*x = SquadConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadConnectResponse) ProtoMessage() {}

func (x *SquadConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadConnectResponse.ProtoReflect.Descriptor instead.
func (*SquadConnectResponse) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{12}
}

func (x *SquadConnectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SquadConnectResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SquadConnectResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SquadConnectResponse) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type SquadLeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	SquadId string `protobuf:"bytes,2,opt,name=squadId,proto3" json:"squadId,omitempty"`
	Token   string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SquadLeaveRequest) Reset() {
	*x = SquadLeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadLeaveRequest) ProtoMessage() {}

func (x *SquadLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadLeaveRequest.ProtoReflect.Descriptor instead.
func (*SquadLeaveRequest) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{13}
}

func (x *SquadLeaveRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SquadLeaveRequest) GetSquadId() string {
	if x != nil {
		return x.SquadId
	}
	return ""
}

func (x *SquadLeaveRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SquadCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string      `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Squad   *ProtoSquad `protobuf:"bytes,3,opt,name=squad,proto3" json:"squad,omitempty"`
}

func (x *SquadCreateResponse) Reset() {
	*x = SquadCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadCreateResponse) ProtoMessage() {}

func (x *SquadCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadCreateResponse.ProtoReflect.Descriptor instead.
func (*SquadCreateResponse) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{14}
}

func (x *SquadCreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SquadCreateResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SquadCreateResponse) GetSquad() *ProtoSquad {
	if x != nil {
		return x.Squad
	}
	return nil
}

type SquadListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	LastIndex int32         `protobuf:"varint,2,opt,name=lastIndex,proto3" json:"lastIndex,omitempty"`
	Squads    []*ProtoSquad `protobuf:"bytes,3,rep,name=squads,proto3" json:"squads,omitempty"`
}

func (x *SquadListResponse) Reset() {
	*x = SquadListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadListResponse) ProtoMessage() {}

func (x *SquadListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadListResponse.ProtoReflect.Descriptor instead.
func (*SquadListResponse) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{15}
}

func (x *SquadListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SquadListResponse) GetLastIndex() int32 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

func (x *SquadListResponse) GetSquads() []*ProtoSquad {
	if x != nil {
		return x.Squads
	}
	return nil
}

type SquadUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string      `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Squad   *ProtoSquad `protobuf:"bytes,3,opt,name=squad,proto3" json:"squad,omitempty"`
}

func (x *SquadUpdateResponse) Reset() {
	*x = SquadUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadUpdateResponse) ProtoMessage() {}

func (x *SquadUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadUpdateResponse.ProtoReflect.Descriptor instead.
func (*SquadUpdateResponse) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{16}
}

func (x *SquadUpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SquadUpdateResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SquadUpdateResponse) GetSquad() *ProtoSquad {
	if x != nil {
		return x.Squad
	}
	return nil
}

type SquadDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succes bool        `protobuf:"varint,1,opt,name=succes,proto3" json:"succes,omitempty"`
	Reason string      `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Squad  *ProtoSquad `protobuf:"bytes,3,opt,name=squad,proto3" json:"squad,omitempty"`
}

func (x *SquadDeleteResponse) Reset() {
	*x = SquadDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadDeleteResponse) ProtoMessage() {}

func (x *SquadDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadDeleteResponse.ProtoReflect.Descriptor instead.
func (*SquadDeleteResponse) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{17}
}

func (x *SquadDeleteResponse) GetSucces() bool {
	if x != nil {
		return x.Succes
	}
	return false
}

func (x *SquadDeleteResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SquadDeleteResponse) GetSquad() *ProtoSquad {
	if x != nil {
		return x.Squad
	}
	return nil
}

type SquadLeaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	SquadId string `protobuf:"bytes,3,opt,name=squadId,proto3" json:"squadId,omitempty"`
}

func (x *SquadLeaveResponse) Reset() {
	*x = SquadLeaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquadLeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquadLeaveResponse) ProtoMessage() {}

func (x *SquadLeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquadLeaveResponse.ProtoReflect.Descriptor instead.
func (*SquadLeaveResponse) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{18}
}

func (x *SquadLeaveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SquadLeaveResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SquadLeaveResponse) GetSquadId() string {
	if x != nil {
		return x.SquadId
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Success bool              `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Payload map[string]string `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_grpc_manager_proto_rawDescGZIP(), []int{19}
}

func (x *Response) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Response) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_grpc_manager_proto protoreflect.FileDescriptor

var file_grpc_manager_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0xbc, 0x01,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x1a, 0x3a, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6b, 0x0a, 0x13,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0xee, 0x01,
	0x0a, 0x0f, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xad,
	0x01, 0x0a, 0x13, 0x53, 0x71, 0x75, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf4,
	0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x71, 0x75, 0x61, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x71, 0x75, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x71, 0x75, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x53, 0x71, 0x75, 0x61, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x71, 0x75, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x71, 0x75,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xba, 0x02, 0x0a, 0x10, 0x53, 0x71, 0x75,
	0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x71, 0x75,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x71,
	0x75, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x71, 0x75, 0x61, 0x64,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x53, 0x71, 0x75, 0x61, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x71, 0x75, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x71, 0x75,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5c, 0x0a, 0x12, 0x53, 0x71, 0x75, 0x61,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x71, 0x75, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x71, 0x75, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x71, 0x75, 0x61,
	0x64, 0x73, 0x49, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x22, 0x6f, 0x0a, 0x10, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x23, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x70,
	0x65, 0x65, 0x72, 0x73, 0x22, 0x72, 0x0a, 0x14, 0x53, 0x71, 0x75, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x5b, 0x0a, 0x11, 0x53, 0x71, 0x75, 0x61,
	0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x71, 0x75, 0x61, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x71, 0x75, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x13, 0x53, 0x71, 0x75, 0x61, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x71, 0x75, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x71, 0x75,
	0x61, 0x64, 0x52, 0x05, 0x73, 0x71, 0x75, 0x61, 0x64, 0x22, 0x78, 0x0a, 0x11, 0x53, 0x71, 0x75,
	0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x71, 0x75, 0x61, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x71, 0x75, 0x61, 0x64, 0x52, 0x06, 0x73, 0x71, 0x75,
	0x61, 0x64, 0x73, 0x22, 0x72, 0x0a, 0x13, 0x53, 0x71, 0x75, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05,
	0x73, 0x71, 0x75, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x71, 0x75, 0x61, 0x64,
	0x52, 0x05, 0x73, 0x71, 0x75, 0x61, 0x64, 0x22, 0x70, 0x0a, 0x13, 0x53, 0x71, 0x75, 0x61, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x71, 0x75, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x71, 0x75,
	0x61, 0x64, 0x52, 0x05, 0x73, 0x71, 0x75, 0x61, 0x64, 0x22, 0x60, 0x0a, 0x12, 0x53, 0x71, 0x75,
	0x61, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x71, 0x75, 0x61, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x71, 0x75, 0x61, 0x64, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x1a, 0x3a, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x83, 0x05, 0x0a,
	0x0b, 0x47, 0x72, 0x70, 0x63, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4b, 0x0a,
	0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x75, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x71, 0x75, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x53, 0x71, 0x75, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x75,
	0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x71, 0x75, 0x61, 0x64, 0x12,
	0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x71, 0x75, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x75,
	0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x71, 0x75, 0x61, 0x64, 0x12, 0x1c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x53, 0x71, 0x75, 0x61, 0x64, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x53, 0x71, 0x75, 0x61, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_manager_proto_rawDescOnce sync.Once
	file_grpc_manager_proto_rawDescData = file_grpc_manager_proto_rawDesc
)

func file_grpc_manager_proto_rawDescGZIP() []byte {
	file_grpc_manager_proto_rawDescOnce.Do(func() {
		file_grpc_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_manager_proto_rawDescData)
	})
	return file_grpc_manager_proto_rawDescData
}

var file_grpc_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_grpc_manager_proto_goTypes = []interface{}{
	(*Request)(nil),              // 0: manager.Request
	(*PeerRegisterRequest)(nil),  // 1: manager.PeerRegisterRequest
	(*PeerRegisterResponse)(nil), // 2: manager.PeerRegisterResponse
	(*PeerListRequest)(nil),      // 3: manager.PeerListRequest
	(*SquadConnectRequest)(nil),  // 4: manager.SquadConnectRequest
	(*ProtoSquad)(nil),           // 5: manager.ProtoSquad
	(*SquadCreateRequest)(nil),   // 6: manager.SquadCreateRequest
	(*SquadListRequest)(nil),     // 7: manager.SquadListRequest
	(*SquadUpdateRequest)(nil),   // 8: manager.SquadUpdateRequest
	(*SquadDeleteRequest)(nil),   // 9: manager.SquadDeleteRequest
	(*Peer)(nil),                 // 10: manager.Peer
	(*PeerListResponse)(nil),     // 11: manager.PeerListResponse
	(*SquadConnectResponse)(nil), // 12: manager.SquadConnectResponse
	(*SquadLeaveRequest)(nil),    // 13: manager.SquadLeaveRequest
	(*SquadCreateResponse)(nil),  // 14: manager.SquadCreateResponse
	(*SquadListResponse)(nil),    // 15: manager.SquadListResponse
	(*SquadUpdateResponse)(nil),  // 16: manager.SquadUpdateResponse
	(*SquadDeleteResponse)(nil),  // 17: manager.SquadDeleteResponse
	(*SquadLeaveResponse)(nil),   // 18: manager.SquadLeaveResponse
	(*Response)(nil),             // 19: manager.Response
	nil,                          // 20: manager.Request.PayloadEntry
	nil,                          // 21: manager.PeerListRequest.FiltersEntry
	nil,                          // 22: manager.SquadListRequest.FiltersEntry
	nil,                          // 23: manager.Response.PayloadEntry
}
var file_grpc_manager_proto_depIdxs = []int32{
	20, // 0: manager.Request.payload:type_name -> manager.Request.PayloadEntry
	21, // 1: manager.PeerListRequest.filters:type_name -> manager.PeerListRequest.FiltersEntry
	22, // 2: manager.SquadListRequest.filters:type_name -> manager.SquadListRequest.FiltersEntry
	10, // 3: manager.PeerListResponse.peers:type_name -> manager.Peer
	5,  // 4: manager.SquadCreateResponse.squad:type_name -> manager.ProtoSquad
	5,  // 5: manager.SquadListResponse.squads:type_name -> manager.ProtoSquad
	5,  // 6: manager.SquadUpdateResponse.squad:type_name -> manager.ProtoSquad
	5,  // 7: manager.SquadDeleteResponse.squad:type_name -> manager.ProtoSquad
	23, // 8: manager.Response.payload:type_name -> manager.Response.PayloadEntry
	0,  // 9: manager.GrpcManager.Link:input_type -> manager.Request
	1,  // 10: manager.GrpcManager.RegisterPeer:input_type -> manager.PeerRegisterRequest
	3,  // 11: manager.GrpcManager.ListPeers:input_type -> manager.PeerListRequest
	6,  // 12: manager.GrpcManager.CreateSquad:input_type -> manager.SquadCreateRequest
	8,  // 13: manager.GrpcManager.UpdateSquad:input_type -> manager.SquadUpdateRequest
	9,  // 14: manager.GrpcManager.DeleteSquad:input_type -> manager.SquadDeleteRequest
	7,  // 15: manager.GrpcManager.ListSquad:input_type -> manager.SquadListRequest
	4,  // 16: manager.GrpcManager.ConnectSquad:input_type -> manager.SquadConnectRequest
	13, // 17: manager.GrpcManager.LeaveSquad:input_type -> manager.SquadLeaveRequest
	19, // 18: manager.GrpcManager.Link:output_type -> manager.Response
	2,  // 19: manager.GrpcManager.RegisterPeer:output_type -> manager.PeerRegisterResponse
	11, // 20: manager.GrpcManager.ListPeers:output_type -> manager.PeerListResponse
	14, // 21: manager.GrpcManager.CreateSquad:output_type -> manager.SquadCreateResponse
	16, // 22: manager.GrpcManager.UpdateSquad:output_type -> manager.SquadUpdateResponse
	17, // 23: manager.GrpcManager.DeleteSquad:output_type -> manager.SquadDeleteResponse
	15, // 24: manager.GrpcManager.ListSquad:output_type -> manager.SquadListResponse
	12, // 25: manager.GrpcManager.ConnectSquad:output_type -> manager.SquadConnectResponse
	18, // 26: manager.GrpcManager.LeaveSquad:output_type -> manager.SquadLeaveResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_grpc_manager_proto_init() }
func file_grpc_manager_proto_init() {
	if File_grpc_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSquad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadLeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquadLeaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_manager_proto_goTypes,
		DependencyIndexes: file_grpc_manager_proto_depIdxs,
		MessageInfos:      file_grpc_manager_proto_msgTypes,
	}.Build()
	File_grpc_manager_proto = out.File
	file_grpc_manager_proto_rawDesc = nil
	file_grpc_manager_proto_goTypes = nil
	file_grpc_manager_proto_depIdxs = nil
}
